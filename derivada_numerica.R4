#Programacao Estatistica
f1 = function(x){
  return(log(x^2+x-2))
}

plot(0,xlim=c(-10,10),type="n",ylim=c(-5,5))
abline(h=0)
abline(v=0)
curve(f1,xlim=c(-10,-2),add=T)
curve(f1,xlim=c(1,10),add=T)

#12.4 - f(x) = ln( x^2 + x - 2 ) -> Dom(f) = (-inf,-2) U (1,inf)
deriv_num_f1 = function(x0){
  
  inc=0.0001
  
  f1 = function(x){
    return(log(x^2+x-2))
  }
  
  #verificar se x0 nao esta no dom
  if(x0>-2 && x0<1)
    stop("o valor de x0 nao esta no dominio da funcao, logo nao existe derivada em x0")
  
  h = 0.1
  repeat{
    x1 = x0 + h
    x2 = x0 - h
    #verificar se x1 e x2 estao no dominio
    if(x1 < -2 || x1 > 1){
      if(x2 < -2 || x2 > 1){
        d = (f1(x1) - f1(x2))/(2*h)
        
        h = h/2
        
        x1 = x0 + h
        x2 = x0 - h
        
        d_n = (f1(x1) - f1(x2))/(2*h)
        
        if(abs(d - d_n) < inc)
          return(d_n)
      }
    }
    h = h/2
  }
}

deriv_num_f1(1.5)

deriv_num_f1_rec = function(x0,h=0.1){
  inc=0.0001
  
  f1 = function(x){
    return(log(x^2+x-2))
  }
  
  #verificar se x0 nao esta no dom
  if(x0>-2 && x0<1)
    stop("o valor de x0 nao esta no dominio da funcao, logo nao existe derivada em x0")
  
  x1 = x0 + h
  x2 = x0 - h
  
  if(x1 < -2 || x1 > 1){
    if(x2 < -2 || x2 > 1){
      d = (f1(x1) - f1(x2))/(2*h)
      
      h = h/2
      
      x1 = x0 + h
      x2 = x0 - h
      
      d_n = (f1(x1) - f1(x2))/(2*h)
      
      if(abs(d - d_n) < inc)
        return(d_n)
    }
  }
  return(deriv_num_f1_rec(x0,h/2))
}

deriv_num_f1_rec(1.5,h=1)



#12.5
#a) R
#b) 
f = function(x){
  exp(-x/3)*( 1 + (x/(x^2 + 1)) ) - 1
}
plot(f,xlim=c(-5,5))

#c)
#derivada numerica para qualquer funcao com dominio igual a reta toda
df = function(x,h=0.1){
  f = function(x){
    exp(-x/3)*( 1 + (x/(x^2 + 1)) ) - 1
  }
  inc = 0.0001
  
  x1 = x + h
  x2 = x - h
  d1 = (f(x1)-f(x2))/(2*h)
  
  h = h/2
  x1 = x + h
  x2 = x - h
  d2 = (f(x1)-f(x2))/(2*h)
  
  if(abs(d1-d2)<inc)
    return(d2)
  
  return(df(x,h/2))
}
df(1)
df(0)

#d)
#i
plot(f,xlim=c(-3,5))
abline(h=0)
abline(v=0)

plot(df,xlim=c(-3,5))
abline(h=0)
abline(v=0)

#ii)
bissecao = function(df,a,b,e=0.0001){

  if(df(a)*df(b)>0)
    stop(
      cat("nao podemos garantir que exista uma raiz entre ", 
          a," e ",b))
  
  m = (a+b)/2
  
  if(df(m)==0)
    return(m)
  
  if(df(a)==0)
    return(m)
  
  if(df(b)==0)
    return(m)
  
  if(abs(b-a) < 2*e){
    return(m)
  }
  
  if(df(a)*df(m)<0)
    return(bissecao(df,a,m))
  
  return(bissecao(df,m,b))
  
}
xmin=bissecao(df,-2,0)
xmax=bissecao(df,0,2)

plot(df,xlim=c(-3,5))
abline(h=0)
segments(x0=xmin,y0=2,x1=xmin,y1=-2,lty=2)
points(xmin,0,pch=19,cex=1.2)
segments(x0=xmax,y0=1,x1=xmax,y1=-1,lty=2)
points(xmax,0,pch=19,cex=1.2)

plot(f,xlim=c(-3,5))
abline(h=0)
points(xmin,f(xmin),pch=19,cex=1.2)
points(xmax,f(xmax),pch=19,cex=1.2)
